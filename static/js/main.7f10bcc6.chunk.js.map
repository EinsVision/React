{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","console","log","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA+BeA,MA3Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACR,oBAAgBJ,UAAU,eAA1B,SAA0CD,GAAjCK,QAGjB,oBAAGJ,UAAU,gBAAb,UAA8BH,EAAQQ,MAAM,EAAE,KAA9C,gBC4CGC,G,kNArDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yDALV,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAIX,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAPxB,2C,4KAeVQ,KAAKN,Y,qIAILO,QAAQC,IAAI,mBADN,MAEsBF,KAAKT,MAA1BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OAClB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACS,qBAAKR,UAAU,SAAf,SACA,sBAAMA,UAAU,cAAhB,0BAKN,qBAAKA,UAAU,SAAf,SACCS,EAAON,KAAI,SAAAgB,GAAK,OACf,cAAC,EAAD,CACEC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,oB,GA5CZuB,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f10bcc6.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n    <div className='movie'>\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className='movie_data'>\r\n            <h3 className='movie_title'>{title}</h3>\r\n            <h5 className='movie_year'>{year}</h5>\r\n            <ul className='movie_genres'>\r\n                {genres.map((genres, index) => (\r\n                    <li key={index} className='genres_genre'>{genres}</li>\r\n                ))}\r\n            </ul>\r\n            <p className='movie_summary'>{summary.slice(0,140)}...</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: propTypes.number.isRequired,\r\n    year: propTypes.number.isRequired,\r\n    title: propTypes.string.isRequired,\r\n    summary: propTypes.string.isRequired,\r\n    poster: propTypes.string.isRequired,\r\n    genres: propTypes.arrayOf(propTypes.string).isRequired,\r\n}\r\n\r\nexport default Movie;\r\n","// import { render } from '@testing-library/react';\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\nimport './App.css'\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data:{\n        data: {movies}\n      }\n    } = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n    //console.log(movies.data.data.movies);\n    this.setState({movies, isLoading: false});\n  };\n\n  async componentDidMount(){\n    // console.log('componentDidMount function');\n    // setTimeout(() => {\n    //   this.setState({isLoading: false});\n    // }, 2000);\n    this.getMovies();\n  }\n\n  render(){\n    console.log('render function');\n    const {isLoading, movies} = this.state;\n    return (\n      <section className='container'>\n        {isLoading \n              ? ( <div className='loader'>\n                  <span className='loader_text'>\n                    Loading...\n                  </span>\n                </div>\n            ) : \n            <div className='movies'>\n            {movies.map(movie => (\n              <Movie\n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n              ))}\n            </div>\n      }\n      </section>\n    );\n  }\n}\n\nexport default App;\n\n/*\n 아래 두개는 같은 것이다.\n props.fav\n { fav }\n*/\n\n/*\nfunction Food({delicious, picture, rating}){\n  // console.log(props);\n  return(\n    <div>\n      <h3> I like {delicious}</h3>\n      <h4>{rating}/5.0</h4>\n      <img src={picture} alt={delicious}/>\n    </div>\n  ); \n}\n*/\n/*\nFood.propTypes = {\n  delicious: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\n*/ \n/*\nconst foodILike = [ \n  {\n    id: 1,\n    name: 'Kimchi',\n    image: 'https://admin.cjrecipe.com:9007/images/theKitchen/PHON/0000001651/0000006094/0000001651.jpg',\n    rating: 5,\n  },\n  {\n    id: 2,\n    name: 'Samgyeopsal',\n    image: 'http://cdn.011st.com/11dims/resize/600x600/quality/75/11src/pd/21/6/2/3/3/6/4/fMusd/2884623364_B.jpg',\n    rating: 4.9,\n  },\n  {\n    id:3,\n    name: 'ramen',\n    image: 'https://mblogthumb-phinf.pstatic.net/MjAyMDA1MjZfNDMg/MDAxNTkwNDgxOTc1OTE1.rpezhYUxGHG0X6-dmVwuACnqm7AugH9CUjxEatcVNsAg.C27glH_kXPk5zTORLyjUbU_yjkGDEbmwZXjaq_xGltIg.JPEG.naverschool/%ED%98%B8%EB%A1%9C%EB%A1%9C%EB%A1%9D.jpg?type=w800',\n    rating: 4.8,\n  },\n  {\n    id:4,\n    name: 'chicken',\n    image: 'http://economychosun.com/query/upload/303/20190608214338_gubchoja.jpg',\n    rating: 4.7,\n  },\n  {\n    id:5,\n    name: 'Yookgejang',\n    image: 'http://image.gsshop.com/image/26/27/26278621_L1.jpg',\n    rating: 5.5,\n  },\n  \n];\n\n*/\n\n// 방법 1\n/*\nfunction App(){\n  return (\n  <div>\n    {foodILike.map(dish => <Food \n    key={dish.id} \n    delicious={dish.name} \n    picture={dish.image} \n    rating={dish.rating}/>)}\n  </div>\n  );\n}\n*/\n\n// Function component는 뭔가를 return해 그리고 screen에 표시돼, className component는 className야 하지만 \n// react component로 부터 확장되고 screen에 표시돼 그리고 render() method 안에 넣야야 한다.\n// 즉, React는 자동적으로 너의 className component의 render method를 실행해! 자동으로!\n// 방법 3 (State 는 object이고 component의 data를 넣을 공간이 있고 이 데이터는 변한다.)\n/*\nclassName App extends React.Component{\n  constructor(props){\n    super(props);\n    console.log('hello constructor function');\n  }\n\n  state={\n    count: 0\n  }\n\n  add = () => {\n    console.log('add');\n    // this.state.count = 1;\n    this.setState(current => ({count: current.count + 1}));\n  };\n\n  minus = () => {\n    console.log('minus');\n    this.setState(current => ({count: current.count - 1}));\n    // this.state.count = -1; // 이렇게하면 안되는 이유는 매번 state의 상태를 변경할 때 너는 react가 render function을 호출하지 않는다.\n    //  Do not mutate state directly. Use setState() 이러한 error를 발생시킨다.\n  };\n  // mount는 생겨나는 것, 태어나는 것, 살아 있는 것\n  componentDidMount(){ // 컴포넌트가 만들어지고 첫 렌더링을 다 마친 후 실행되는 메소드입니다.\n    console.log('component rendered'); \n  }\n\n  componentDidUpdate(){\n    console.log('I just updated');\n  }\n\n  render(){\n    console.log('render function');\n    return (\n      <div>\n        <h1>The number is {this.state.count}</h1>\n        <button onClick={this.add}>Add</button>\n        <button onClick={this.minus}>Minus</button>\n      </div>\n    );\n  }\n}\n*/\n\n// 방법 2\n// function renderFood(dish){\n//   console.log(dish);\n//   return (<Food delicious={dish.name} picture={dish.image}/>);\n// }\n\n// function App(){\n//   return (\n//     <div>\n//       {foodILike.map(renderFood)}\n//     </div>\n//   );\n// }\n\n\n// EinsVision.github.io/React","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// component는 HTML을 반환하는 함수이다.\n// React는 component를 사용해서 HTML처럼 작성하려는 경우에 필요하다.\n// javascript와 HTML 사이의 이러한 조합을 jsx라고 부른다.\n\n// react application은 한 번에 하나의 component만 rendering 할 수 있다는 점이야.\n// react가 멋진 이유는 재사용 가능한 component를 만들 수 있다는 점이다. \n// 또한 component에서 component로 정보를 보낼 수 있다."],"sourceRoot":""}